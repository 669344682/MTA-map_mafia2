local object = {
{"S01_Dum_70", {{-1494.185 ,162.6247 ,-8.915341 ,0 ,0 ,0},}, 0},
{"S01_Dum_71", {{-1494.185 ,162.6247 ,-8.915341 ,0 ,0 ,0},}, 0},
{"S01_Dum_72", {{-1494.185 ,162.6247 ,-8.915341 ,0 ,0 ,0},}, 0},
{"S01_Dum_73", {{-1553.936 ,-196.0567 ,-9.671975 ,0 ,0 ,0},}, 0},
{"S01_Dum_74", {{-1743.63 ,-114.1281 ,-4.051975 ,0 ,0 ,180},}, 0},
{"S01_Dum_75", {{-1708.732 ,-142.939 ,-12.61707 ,0 ,0 ,180},}, 0},
{"S01_Dum_76", {{-1596.732 ,59.42622 ,-10.39732 ,0 ,0 ,180},}, 0},
{"S01_Dum_69", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_68", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_63", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_62", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_61", {{-1600.297 ,-131.5207 ,-6.509433 ,0 ,0 ,0},}, 0},
{"S01_Dum_67", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_66", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_65", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_64", {{-1719.526 ,-108.7664 ,-11.12599 ,0 ,0 ,0},}, 0},
{"S01_Dum_58", {{-1600.297 ,-131.5207 ,-6.509433 ,0 ,0 ,0},}, 0},
{"S01_Dum_59", {{-1600.297 ,-131.5207 ,-6.509433 ,0 ,0 ,0},}, 0},
{"S01_Dum_56", {{-1519.49 ,-129.6555 ,-9.706223 ,0 ,0 ,0},}, 0},
{"S01_Dum_57", {{-1600.297 ,-131.5207 ,-6.509433 ,0 ,0 ,0},}, 0},
{"S01_Dum_54", {{-1519.49 ,-129.6555 ,-9.706223 ,0 ,0 ,0},}, 0},
{"S01_Dum_55", {{-1519.49 ,-129.6555 ,-9.706223 ,0 ,0 ,0},}, 0},
{"S01_Dum_52", {{-1390.846 ,-83.72492 ,-7.158652 ,0 ,0 ,0},}, 0},
{"S01_Dum_53", {{-1519.49 ,-129.6555 ,-9.706223 ,0 ,0 ,0},}, 0},
{"S01_Dum_50", {{-1397.082 ,-171.6886 ,-8.733788 ,0 ,0 ,0},}, 0},
{"S01_Dum_51", {{-1390.846 ,-83.72492 ,-7.158652 ,0 ,0 ,0},}, 0},
{"S01_Dum_41", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_40", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_43", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_42", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_45", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_44", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_47", {{-1453.11 ,-127.6531 ,-10.4265 ,0 ,0 ,0},}, 0},
{"S01_Dum_46", {{-1538.875 ,-46.85852 ,11.69291 ,0 ,0 ,0},}, 0},
{"S01_Dum_49", {{-1453.11 ,-127.6531 ,-10.4265 ,0 ,0 ,0},}, 0},
{"S01_Dum_48", {{-1453.11 ,-127.6531 ,-10.4265 ,0 ,0 ,0},}, 0},
{"S01_Dum_34", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_35", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_36", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_37", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_30", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_31", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_32", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_33", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_38", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_39", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_27", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_26", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_25", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_24", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_23", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_22", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_21", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_20", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_29", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_28", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_18", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_19", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_12", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_13", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_10", {{-1453.11 ,-127.6531 ,-10.4265 ,0 ,0 ,0},}, 0},
{"S01_Dum_11", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_16", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_17", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_14", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_15", {{-1732.36 ,85.53132 ,4.297168 ,0 ,0 ,0},}, 0},
{"S01_Dum_09", {{-1397.082 ,-171.6886 ,-8.733788 ,0 ,0 ,0},}, 0},
{"S01_Dum_08", {{-1499.296 ,-221.5679 ,-9.519917 ,0 ,0 ,0},}, 0},
{"S01_Dum_05", {{-1493 ,29.71553 ,-6.741611 ,0 ,0 ,0},}, 0},
{"S01_Dum_04", {{-1615.646 ,86.80866 ,-1.869224 ,0 ,0 ,0},}, 0},
{"S01_Dum_07", {{-1600.297 ,-131.5207 ,-6.509433 ,0 ,0 ,0},}, 0},
{"S01_Dum_06", {{-1390.846 ,-83.72492 ,-7.158652 ,0 ,0 ,0},}, 0},
{"S01_Dum_01", {{-1722.225 ,-251.4042 ,-12.23992 ,0 ,0 ,90},}, 0},
{"S01_Dum_03", {{-1730.569 ,-134.092 ,-4.913306 ,0 ,0 ,0},}, 0},
{"S01_Dum_02", {{-1795.07 ,97.88853 ,8.346519 ,0 ,0 ,0},}, 0},
}

function string.split(input, separator)

	if type(input) ~= "string" then error("type mismatch in argument #1", 3) end
	if (separator and type(separator) ~= "string") then error("type mismatch in argument #2", 3) end

	if not separator then
		separator = "%s"
	end
	local t = {}
	local i = 1
	for str in string.gmatch(input, "([^"..separator.."]+)") do
		t[i] = str
		i = i + 1
	end
	return t
end

local pyt_new = "C:\\default_new.txt"
--[[local pyt = "C:\\default.txt"
local file = io.open(pyt, "r")
local file_new = io.open(pyt_new, "w")
local text = ""

for line in io.lines(pyt) do
	if string.find(line, "Material") then
		file_new:write(text.."\n")
		text = string.split(line, " ")[2]
	end

	if string.find(line, "File") then
		text = text.." "..tostring(string.split(line, " ")[2])
	end
end]]

for k,v in pairs(object) do
	local pyt = "C:\\"..v[1].."(0).obj.mtl"
	local file = io.open(pyt, "r")
	local text = {}

	for line in io.lines(pyt) do
		table.insert(text, line)
	end

	for k,line in ipairs(text) do
		for p in io.lines(pyt_new) do
			local spl = string.split(tostring(p), " ")
			if line == "map_kd "..tostring(spl[1])..".dds" then
				text[k] = "map_kd "..tostring(spl[2])
				break
			end
		end
	end

	file:close()

	local file = io.open(pyt, "w")
	for i,v in ipairs(text) do
		file:write(v.."\n")
	end

	file:close()
end

local file_meta = io.open("C:\\meta.txt", "w")
for k,v in pairs(object) do
	local pyt = "C:\\"..v[1].."(0).obj"
	local file = io.open(pyt, "r")
	local text = {}

	for line in io.lines(pyt) do
		table.insert(text, line)
	end

	for k,line in ipairs(text) do
		if line == "g mesh" then
			text[k] = "g "..v[1]
		end
	end

	file:close()

	local file = io.open(pyt, "w")
	for i,v in ipairs(text) do
		file:write(v.."\n")
	end

	file:close()

	file_meta:write("<file src='sandisland/"..v[1]..".dff'/>\n")
	file_meta:write("<file src='sandisland/"..v[1]..".col'/>\n")
end

file_meta:close()
